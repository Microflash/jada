@charset 'UTF-8';

@use 'reset';
@use 'core/colors';
@use 'core/fonts';
@use 'core/variables';
@use 'helpers/queries';
@use 'helpers/layouts';
@use 'helpers/mixins';
@use 'globals';

.container-fluid {
  flex-grow: 1;
  margin: 0 auto;
  position: relative;
  width: auto;

  @include queries.tab-portrait {
    padding-right: variables.$expanse-min;
    padding-left: variables.$expanse-min;
    width: variables.$expanse-rg;
  }
}

.container {
  @extend .container-fluid;
  padding-right: variables.$expanse-min;
  padding-left: variables.$expanse-min;
}

// SVG icons

.icon {
  fill: none;
  stroke: currentColor;
  stroke-width: 1.5px;
  stroke-linecap: round;
  stroke-linejoin: round;
  height: variables.$gfx-sm;
  width: variables.$gfx-sm;
  vertical-align: top;
}

.icon-sm {
  @extend .icon;

  stroke-width: 2px;
  vertical-align: text-top;
  width: variables.$gfx-xs;
}

// Header

.header {
  @include mixins.center(nowrap, space-between);
  @include mixins.expanse(variables.$expanse-min);

  @include queries.within(variables.$width-md) {
    flex-wrap: wrap;
  }

  @include queries.tab-portrait {
    @include mixins.expanse(variables.$expanse-md);
  }

  .brand {
    line-height: 0;

    & > img {
      width: 7.5rem;

      @include queries.tab-portrait {
        width: 8.5rem;
      }
    }
  }
}

// Header menu

.menu {
  display: flex;
  flex-grow: 1;
  align-items: center;
  width: 100%;
  list-style: none;
  margin-left: 0;
  padding: variables.$expanse-min;

  @include queries.phone {
    margin-right: -(variables.$gap-lg);
    margin-left: -(variables.$gap-lg);
  }

  @include queries.within(variables.$width-md) {
    margin-top: variables.$expanse-min;
    background-color: variables.$background-panel-dim;

    li {
      padding-top: variables.$gap-xs;
      padding-bottom: variables.$gap-xs;
    }
  }

  @include queries.tab-landscape {
    flex: 0 1 auto;
    width: auto;

    li {
      margin-left: variables.$expanse-min;
    }
  }
}

// Menu helpers

.is-visible {
  @include mixins.hide(false);
}

.is-hidden-on-phone {
  @include queries.within(variables.$width-md) {
    @include mixins.hide(true);
  }
}

// Hamburger

$hamburger-layer-height: 2px !default;
$hamburger-layer-spacing: 6px !default;

.hamburger {
  padding: 0;
  display: inline-block;
  cursor: pointer;
  outline: none;

  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;

  @include queries.tab-landscape {
    @include mixins.hide(true);
  }

  &.active {
    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: variables.$link;
    }
  }
}

.hamburger-box {
  width: variables.$gap-md;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: variables.$gap-md;
    height: $hamburger-layer-height;
    background-color: variables.$link;
    border-radius: variables.$radius-rg;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: '';
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}

.hamburger-icon {
  .hamburger-inner {
    transition-duration: 0.22s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::before {
      transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
    }

    &::after {
      transition: bottom 0.1s 0.25s ease-in,
        transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.active {
    .hamburger-inner {
      transform: rotate(225deg);
      transition-delay: 0.12s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

      &::before {
        top: 0;
        opacity: 0;
        transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
      }

      &::after {
        bottom: 0;
        transform: rotate(-90deg);
        transition: bottom 0.1s ease-out,
          transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
    }
  }
}

// Footer

.footer {
  margin-top: variables.$gap-xl;
  margin-bottom: variables.$gap-2xl;

  @include queries.tab-portrait {
    margin-top: variables.$gap-2xl;
    margin-bottom: variables.$gap-3xl;
  }

  @include queries.desktop {
    margin-top: variables.$gap-3xl;
    margin-bottom: variables.$gap-2xl * 3;
  }

  .grid-md-cell {
    margin-right: variables.$gap-rg;
    margin-bottom: variables.$gap-rg;
  }

  .is-lead {
    display: flex;
    align-items: center;
    font-weight: variables.$font-semibold;
    margin-bottom: variables.$gap-rg;
  }

  .is-footer-list {
    list-style: none;
    margin-left: 0;
  }

  .is-flex-list {
    display: flex;
  }

  .is-separated {
    margin-right: variables.$gap-sm;
  }
}

// Hero

.hero {
  margin-top: variables.$gap-2xl;
  margin-bottom: variables.$gap-2xl;

  @include queries.tab-portrait {
    margin-top: variables.$gap-3xl;
    margin-bottom: variables.$gap-3xl;
  }

  @include queries.desktop {
    margin-top: variables.$gap-2xl * 3;
    margin-bottom: variables.$gap-2xl * 3;
  }

  @include queries.tab-landscape {
    display: flex;
    flex-direction: column;
    text-align: center;
    max-width: variables.$expanse-xl;
  }

  h1 {
    @include queries.phone {
      font-size: variables.$text-xl;
    }

    @include queries.desktop {
      font-size: 3.5rem;
    }
  }

  .metadata {
    @include mixins.center;

    & > * {
      margin-bottom: variables.$gap-xs;
    }

    @include queries.within(variables.$width-md) {
      justify-content: flex-start;
      font-size: variables.$text-sm;
    }
  }
}

.metadata-author-avatar {
  display: flex;
  align-items: center;

  img {
    width: 5rem;
    height: 5rem;
    border-radius: 50%;

    @include queries.tab-landscape {
      width: 8rem;
      height: 8rem;
    }
  }
}

.metadata-author {
  display: flex;
  align-items: center;

  img {
    width: variables.$gfx-rg;
    height: variables.$gfx-rg;
    border-radius: 50%;

    @include queries.phone {
      width: variables.$gfx-sm;
      height: variables.$gfx-sm;
    }
  }

  a {
    margin-left: variables.$gap-xs;
  }
}

// Card

.card {
  background-color: variables.$background-panel;
  padding: variables.$gap-xl;
  height: inherit;

  @include queries.phone {
    padding: variables.$gap-lg;

    .card-body {
      font-size: variables.$text-md;
    }
  }

  @include queries.tab-portrait {
    border-radius: variables.$radius-md;
  }

  &:hover, 
  &:focus {
    background-color: variables.$background-panel-dim;
  }

  a {
    text-decoration: none;
  }

  .card-header,
  .card-footer {
    font-size: variables.$text-sm;
  }

  .card-header {
    margin-bottom: variables.$gap-xs;
  }

  .card-footer {
    color: variables.$text;
  }
}

// Pagination

.pagination {
  @include mixins.expanse(variables.$gap-lg, variables.$gap-lg);
  @include mixins.center(nowrap, space-between);

  .is-prev,
  .is-next {
    vertical-align: middle;
  }

  @include queries.tab-portrait {
    justify-content: center;
    @include mixins.expanse(5rem, variables.$gap-lg);

    .is-prev {
      margin-right: variables.$gap-lg;
    }

    .is-next {
      margin-left: variables.$gap-lg;
    }
  }

  & > a {
    text-decoration: none;
  }

  @include queries.tab-landscape {
    max-width: variables.$expanse-xl;
  }
}

// Article

.article {
  display: flex;
  flex-direction: column;

  @include queries.tab-landscape {
    max-width: variables.$expanse-xl;
    padding-right: variables.$gap-2xl;
    padding-left: variables.$gap-2xl;
  }

  .main {
    font-size: 1.0625rem;

    & > p:first-of-type {
      font-size: variables.$text-md;
    }

    @include queries.tab-landscape {
      font-size: variables.$text-md;

      & > p:first-of-type {
        font-size: variables.$text-lg;
      }
    }

    @include queries.widescreen {
      font-size: variables.$text-lg;

      & > p:first-of-type {
        font-size: variables.$text-xl;
      }
    }
  }
}

.article-actions {
  @include mixins.expanse(variables.$gap-2xl, variables.$gap-xl);
  @include mixins.center(wrap, space-between);

  & > a {
    text-decoration: none;
    margin-top: variables.$gap-rg;
    margin-right: variables.$gap-rg;
  }

  @include queries.tab-portrait {
    justify-content: center;
    @include mixins.expanse(5rem, variables.$gap-xl);
  }
}

// Article reference links

h1, 
h2, 
h3, 
h4, 
h5, 
h6 {
  &:focus a .ref-link,
  &:hover a .ref-link {
    @include mixins.hide(false);
    display: inline-block;
    width: 1.25ch;
    margin-left: -1.25ch;
    font-weight: variables.$font-normal;

    &::after {
      content: '#';
      outline: none;
    }
  }
}

// Search

$search-border-muted: 1.5px solid variables.$background-panel-dim;
$search-border-visible: 1.5px solid variables.$link;

.search-focal {
  @include mixins.hide(true);
}

.search-container,
.search-box {
  position: relative;
}

.search {
  background-color: variables.$background-panel;
  padding: variables.$gap-sm variables.$gap-rg;
  padding-left: variables.$gap-2xl;
  border: $search-border-muted;
  outline: none;
  width: 100%;
  border-radius: variables.$radius-xl;

  &:focus, 
  &:hover {
    background-color: variables.$background-panel-vibrant;
    border: $search-border-visible;
  }

  @include queries.phone {
    background-color: variables.$background-panel;
  }

  @include queries.tab-landscape {
    width: 20rem;
  }
}

.results-container {
  position: absolute;
  z-index: variables.$elevation-md;
  overflow: hidden;
  width: 100%;
  left: 0;
  right: 0;
  max-height: 32rem;
  margin-top: variables.$gap-xs;
  border: $search-border-visible;
  border-radius: variables.$radius-md;
  box-shadow: 0px 10px 50px -25px colors.$black;

  @include queries.tab-landscape {
    width: 26rem;
  }

  .search-results {
    height: inherit;
    max-height: inherit;
    overflow: auto;
    display: flex;
    flex-direction: column;
    background-color: variables.$background-panel-dim;

    .search-result, .no-result {
      padding: variables.$gap-rg;
    }

    .no-result {
      font-weight: variables.$font-normal;
    }

    .search-result-highlighted {
      background-color: variables.$background-panel;
    }

    .search-result {
      cursor: pointer;
      text-decoration: none;
      border-bottom: 1px solid variables.$border-search;

      &:last-child {
        border-bottom: none;
      }

      &:focus, 
      &:hover {
        background-color: variables.$background-panel-vibrant;
      }

      .search-result-title,
      .search-result-summary {
        display: inline-block;
      }

      .search-result-title {
        font-size: variables.$text-md;
        font-weight: variables.$font-bold;
      }

      .search-result-summary {
        font-size: variables.$text-sm;
        color: variables.$text;
      }
    }
  }
}

.icon-search, 
.icon-close {
  position: absolute;
  top: variables.$gap-sm;
  color: variables.$link;

  &:focus, 
  &:hover {
    color: variables.$link-hover;
  }
}

.icon-search {
  left: variables.$gap-sm;
}

.icon-close {
  right: variables.$gap-sm;
}


// Active links

.active {
  font-weight: variables.$font-semibold;
  text-decoration: underline dotted;
}

// Separator

.separator {
  opacity: variables.$opacity-md;
  padding-right: variables.$gap-xs;
  padding-left: variables.$gap-xs;

  &::after {
    content: '/';
  }
}

// Subtitle 

.subtitle {
  margin-top: variables.$gap-rg;
  font-weight: variables.$font-normal;
  font-size: variables.$text-md;
}

// Primary text

.is-primary {
  color: variables.$link;
}

// Layout

.layout {
  overflow-x: hidden;
}

// Transitions & Animations

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -2%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeOutUp {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2%, 0);
  }
}

@keyframes slideUp {
  from {
    transform: translate3d(0, 20%, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, 0, 0);
  }
}

.animated {
  animation-duration: 500ms;
  transition-duration: 500ms;
  animation-fill-mode: both;

  @media (print), (prefers-reduced-motion: reduce) {
    animation-duration: 1ms;
    transition-duration: 1ms;
    animation-iteration-count: 1;
  }
}

.fade-enter-active {
  @extend .animated;
  animation-name: fadeInDown;
}

.fade-leave-active {
  @extend .animated;
  animation-name: fadeOutUp;
}

.fade-enter, 
.fade-leave-to,
.slide-up-enter,
.slide-up-leave-to {
  opacity: 0;
}

.slide-up-enter-active,
.slide-up-leave-active {
  @extend .animated;
  transition-duration: 300ms;
  animation-duration: 300ms;
  animation-name: slideUp;
}
